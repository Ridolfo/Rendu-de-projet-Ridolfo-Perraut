package com.example.app;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.Reader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;

import android.app.Activity;
import android.app.ProgressDialog;
import android.content.Context;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.os.SystemClock;
import android.text.Editable;
import android.text.InputType;
import android.text.TextWatcher;
import android.util.Log;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import android.view.View.OnTouchListener;
import android.view.View.OnClickListener;
import android.view.MotionEvent;
import android.view.View;
import android.widget.Button;



public class RechercheS extends Activity implements View.OnTouchListener, View.OnClickListener {
	
	
	  protected static final String EXTRA_MESSAGE = null;
	  protected static final String EXTRA_MESSAGE2 = null;

	  private ProgressDialog pDialog;

String ok=null;


	Button envoyer1 = null;
	 
	 
	  
	 

  
  
  EditText critere1 = null;
  
 
  
  
  
  @Override
  public void onCreate(Bundle savedInstanceState) {
	  super.onCreate(savedInstanceState);
	    setContentView(R.layout.activity_recherche_s);
	    	
	   
	    
	    
	    new DLTask().execute("http://binouze.fabrigli.fr/bieres.json");
  
	    
	    envoyer1 = (Button)findViewById(R.id.button1); //  XML button1
	  
	   critere1 = (EditText)findViewById(R.id.critere1); // XML critere1 
	   
	   
	   envoyer1.setOnClickListener(envoyerListener);  //si on clique
	   
	   critere1.addTextChangedListener(textWatcher);  // si on tape
	  
	    
	  
	
	   
  }
  
  
  
  
  
  private class DLTask extends AsyncTask<String, Void, String>{
	  
	  @Override
      protected void onPreExecute() {
          super.onPreExecute();
          // Showing progress dialog
          pDialog = new ProgressDialog(RechercheS.this);
          pDialog.setMessage("TÉLÉCHARGEMENT DES DONEES WEB...");
          pDialog.setCancelable(false);
          pDialog.show();

      }
	  
	  
      @Override
      protected String doInBackground(String... urls) {
          try {
              return downloadUrl(urls[0]);
          } catch (Exception e) {
              return "Unable to retrieve web page. URL may be invalid.";
          }
      }
      
      @Override
      protected void onPostExecute(String result) {
          ok= result;
          pDialog.dismiss();
      }
  }

  private String downloadUrl(String myurl) /*throws IOException*/ {
      //InputStream is = null;

      String result =  getJSON(myurl);
      return result;
      
      /*
      try {
          URL url = new URL(myurl);
          HttpURLConnection conn = (HttpURLConnection) url.openConnection();
          conn.setRequestMethod("GET");
          conn.connect();
          int response = conn.getResponseCode();
          is = conn.

          String contentAsString= readIt(is,80000);
          return contentAsString;
      } finally {
          if(is != null) {
              is.close();
          }
      }*/
      
  }
  
  public String getJSON(String url) {
	    try {
	        URL u = new URL(url);
	        HttpURLConnection c = (HttpURLConnection) u.openConnection();
	        c.setRequestMethod("GET");
	        c.setRequestProperty("Content-length", "0");
	        c.setUseCaches(false);
	        c.setAllowUserInteraction(false);
	        //c.setConnectTimeout(timeout);
	        //c.setReadTimeout(timeout);
	        c.connect();
	        int status = c.getResponseCode();

	        switch (status) {
	            case 200:
	            case 201:
	                BufferedReader br = new BufferedReader(new InputStreamReader(c.getInputStream()));
	                StringBuilder sb = new StringBuilder();
	                String line;
	                while ((line = br.readLine()) != null) {
	                    sb.append(line);Log.i("test", line);
	                }
	                br.close();
	                return sb.toString();
	        }

	    } catch (MalformedURLException ex) {
	    	
	    } catch (IOException ex) {
	    	
	    }
	    return null;
	}

  public String readIt(InputStream in, int len) throws IOException {
	  
	 
      BufferedReader reader = new BufferedReader(new InputStreamReader(in));
      StringBuilder out = new StringBuilder();
      String line;
      while ((line = reader.readLine()) != null) {
    	  Log.i("test", line);
          out.append(line);
      }
      reader.close();
	  
	  
      
    /*  InputStreamReader reader = new InputStreamReader(stream, "UTF-8");
      
      char[] buffer = new char[len];
      reader.read(buffer);
      char temp;
     /* char[] buffer2 = new char[2*len];
      
      int j=0;
      
      for (int i=0;i<len;i++)
      {
    	  
    	  if(buffer[i]=='"')
    	  {
    		  
    		  temp=buffer[i];
    		  buffer2[j]='\\';
    		  buffer2[j+1]=temp;
    		  
    	  }
    	  buffer[j]=buffer[]
      }*/
      
      
      return new String(out);
  }
  
  
  
  
  
  
  
  
  
  private TextWatcher textWatcher = new TextWatcher() {

	    @Override
	    public void onTextChanged(CharSequence s, int start, int before, int count) {
	     
	    }
			
	    @Override
	    public void beforeTextChanged(CharSequence s, int start, int count,
	      int after) {
	  
	    }
	  
	    @Override
	    public void afterTextChanged(Editable s) {
	  
	    }
	  };
	  
	  
	  
  

	  
	  
	// Uniquement pour le bouton "rechercher"
		  private OnClickListener envoyerListener = new OnClickListener() {

			@Override
			
			public void onClick(View v) {
				
				if(ok==null)
				{
					Context context = getApplicationContext();
				    CharSequence text = "chargement";
				    int duration = Toast.LENGTH_SHORT;

				    Toast toast = Toast.makeText(context, text, duration);
				    toast.show();
				   
				}
				
				 EditText editText = (EditText) findViewById(R.id.critere1);
				  String message = editText.getText().toString();
				  
			

				if (message.equals("")) {
					 Context context = getApplicationContext();
					    CharSequence text = "le champ est vide";
					    int duration = Toast.LENGTH_SHORT;

					    Toast toast = Toast.makeText(context, text, duration);
					    toast.show();
					    
					return;
				}
				Intent intent = new Intent(RechercheS.this, ResultatRS.class);
				intent.putExtra(EXTRA_MESSAGE, message);
				intent.putExtra(EXTRA_MESSAGE2,ok );
				
				  startActivity(intent);
			 
				
			}

			
			
				
				
			   
		   
		  };
		  

	 
	 



	

	









	
	



	@Override
	public void onClick(View v) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public boolean onTouch(View v, MotionEvent event) {
		// TODO Auto-generated method stub
		return false;
	}
}